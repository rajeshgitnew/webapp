def MyName = "Rajesh"
pipeline {
agent any 
environment {     
    DOCKERHUB_CREDENTIALS= credentials('rajeshredhat89')     
  }   
stages {
stage ("print variable") {
steps { 
echo "My Name is ${MyName}"
    }
   }
stage ("compile") {
steps {
//git url: 'https://github.com/rajeshgitnew/java.git', branch: 'master'
sh "mvn -DskipTests clean  install"
   }
 }
  stage('Docker Build') {
      agent any
      steps {
        sh 'sudo docker build -t javasamplecode:latest -f /var/lib/jenkins/workspace/Jenkins_Pipeline@2/dockerfile .'
        sh 'sudo docker tag javasamplecode rajeshredhat89/javasamplecode:latest'
        sh 'sudo docker tag javasamplecode rajeshredhat89/javasamplecode:$BUILD_NUMBER'
        //sh "sudo docker stop javasamplecode"
        //sh " sudo docker rm javasamplecode"
        //sh "docker run -d --network host -p 5000:5000 --name javasamplecode javasamplecode"
        }
       }
  stage('Login to Docker Hub') {         
      steps{                            
	sh 'sudo docker login -u ${DOCKERHUB_CREDENTIALS_USR} -p ${DOCKERHUB_CREDENTIALS_PSW}'                 
	echo 'Login Completed'                
      }           
    }               
    stage('Push Image to Docker Hub') {         
      steps{                            
	sh 'sudo docker push rajeshredhat89/javasamplecode:$BUILD_NUMBER'                 
	echo 'Push Image Completed'       
      }           
    }
    stage('Deploy image in kubernetes'){
    steps{
       sshagent(['k8']) {
    // some block
          {
     sh 'scp -r -o StrictHostKeyChecking=no /root/deployment.yaml root@10.1.0.8:/'
    script{
      try{
       sh 'ssh root@10.1.0.8 kubectl apply -f /deployment.yaml'
      }catch(error)
       {
       }
      }
     }
    }
   }
   }
 }   
